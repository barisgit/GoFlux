// Auto-generated tRPC-like API client from Go routes
// Generated by GoFlux type generation system
// Do not edit manually

{{if .ReactQueryEnabled}}import { useQuery, useMutation, useQueryClient, queryOptions } from '@tanstack/react-query'
import type { UseQueryOptions, UseMutationOptions, QueryKey } from '@tanstack/react-query'{{end}}
{{if .UsedTypes}}import type { {{join .UsedTypes ", "}} } from '{{.TypesImport}}'{{end}}

export interface TRPCError {
  message: string
  code: string
  data?: any
}

async function trpcRequest<T>(path: string, options: RequestInit = {}): Promise<T> {
  const response = await fetch(`/api${path}`, {
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
    ...options,
  })

  if (!response.ok) {
    const errorData = await response.text()
    throw new Error(errorData || `HTTP ${response.status}: ${response.statusText}`)
  }

  return response.json()
}

{{if .QueryKeysEnabled}}// Query key factory
export const queryKeys = {
{{.QueryKeys}}
}{{end}}

{{.APIObject}}

export type API = typeof api 