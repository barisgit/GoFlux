// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Category struct {
	ID          int32       `db:"id" json:"id"`
	Name        string      `db:"name" json:"name"`
	Description pgtype.Text `db:"description" json:"description"`
	Color       pgtype.Text `db:"color" json:"color"`
	CreatedAt   time.Time   `db:"created_at" json:"created_at"`
	UpdatedAt   time.Time   `db:"updated_at" json:"updated_at"`
}

type Comment struct {
	ID        int32     `db:"id" json:"id"`
	Content   string    `db:"content" json:"content"`
	PostID    int32     `db:"post_id" json:"post_id"`
	UserID    int32     `db:"user_id" json:"user_id"`
	CreatedAt time.Time `db:"created_at" json:"created_at"`
	UpdatedAt time.Time `db:"updated_at" json:"updated_at"`
}

type Post struct {
	ID        int32       `db:"id" json:"id"`
	Title     string      `db:"title" json:"title"`
	Content   string      `db:"content" json:"content"`
	UserID    int32       `db:"user_id" json:"user_id"`
	Published pgtype.Bool `db:"published" json:"published"`
	CreatedAt time.Time   `db:"created_at" json:"created_at"`
	UpdatedAt time.Time   `db:"updated_at" json:"updated_at"`
}

type PostCategory struct {
	PostID     int32 `db:"post_id" json:"post_id"`
	CategoryID int32 `db:"category_id" json:"category_id"`
}

type PostTag struct {
	PostID int32 `db:"post_id" json:"post_id"`
	TagID  int32 `db:"tag_id" json:"tag_id"`
}

type Tag struct {
	ID        int32     `db:"id" json:"id"`
	Name      string    `db:"name" json:"name"`
	Slug      string    `db:"slug" json:"slug"`
	CreatedAt time.Time `db:"created_at" json:"created_at"`
	UpdatedAt time.Time `db:"updated_at" json:"updated_at"`
}

type User struct {
	ID        int32       `db:"id" json:"id"`
	Name      string      `db:"name" json:"name"`
	Email     string      `db:"email" json:"email"`
	Age       pgtype.Int4 `db:"age" json:"age"`
	CreatedAt time.Time   `db:"created_at" json:"created_at"`
	UpdatedAt time.Time   `db:"updated_at" json:"updated_at"`
}

type UserProfile struct {
	UserID    int32       `db:"user_id" json:"user_id"`
	Bio       pgtype.Text `db:"bio" json:"bio"`
	Avatar    pgtype.Text `db:"avatar" json:"avatar"`
	Website   pgtype.Text `db:"website" json:"website"`
	Location  pgtype.Text `db:"location" json:"location"`
	BirthDate pgtype.Date `db:"birth_date" json:"birth_date"`
	CreatedAt time.Time   `db:"created_at" json:"created_at"`
	UpdatedAt time.Time   `db:"updated_at" json:"updated_at"`
}
